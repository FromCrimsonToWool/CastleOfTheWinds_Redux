cmake_minimum_required( VERSION 2.8 )
project( Castle_Of_The_Winds-Universal )

set( SOURCE_FILES src/main.cpp )
set( CMAKE_BINARY_DIR ${CMAKE_SOURCE_DIR}/bin )
set( CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake")
set( EXECUTABLE_OUTPUT_PATH ${CMAKE_BINARY_DIR} )
set( LIBRARY_OUTPUT_PATH ${CMAKE_BINARY_DIR} )

include_directories( "${PROJECT_SOURCE_DIR}" )
#set( CMAKE_CXX_COMPILER "/usr/bin/clang++" )
#set( CMAKE_CXX_COMPILER_FLAGS "${CMAKE_CXX_COMPILER_FLAGS} -Wall -c -std=c++11" )
#set( CMAKE_EXE_LINKER_FLAGS  "${CMAKE_EXE_LINKER_FLAGS} -F/Library/Frameworks -framework SDL2 -framework SDL2_image" )

if (${CMAKE_CXX_COMPILER_ID} STREQUAL "GNU" OR ${CMAKE_CXX_COMPILER_ID} STREQUAL "Clang")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra -pedantic -std=c++11")
    set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS} ${CMAKE_CXX_FLAGS_DEBUG} -g")
    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS} ${CMAKE_CXX_FLAGS_RELEASE} -O2")
elseif (${CMAKE_CXX_COMPILER_ID} STREQUAL "MSVC")
    if (CMAKE_CXX_FLAGS MATCHES "/W[0-4]")
        string(REGEX REPLACE "/W[0-4]" "/W4" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
    else()
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /W4")
    endif()
endif()

find_package( SDL2 REQUIRED )
include_directories( ${SDL2_INCLUDE_DIR} )
find_package( SDL2_image REQUIRED )
include_directories( ${SDL2_IMAGE_INCLUDE_DIR} )

add_executable( Castle_of_the_Winds-_Universal ${SOURCE_FILES} )
target_link_libraries( Castle_of_the_Winds-_Universal ${SDL2_LIBRARY} ${SDL2_IMAGE_LIBRARY} )
